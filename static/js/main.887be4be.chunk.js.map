{"version":3,"sources":["styles/QuoteBox.js","styles/Main.js","components/Quote.js","App.js","index.js"],"names":["styles_QuoteBox","QuoteBox","styled","div","_templateObject","Text","p","_templateObject2","Author","_templateObject3","FlexBox","_templateObject4","NewQuote","button","_templateObject5","Link","a","_templateObject6","Main","main","Main_templateObject","props","gradient","Quote","_useState","useState","_useState2","Object","slicedToArray","quote","setQuote","_useState3","_useState4","author","setAuthor","_useState5","_useState6","setGradient","useEffect","generateRandomQuote","id","Math","floor","random","quotes","length","gid","gradients","react_default","createElement","styles_Main","onClick","href","concat","replace","target","rel","App","Fragment","components_Quote","ReactDOM","render","src_App","document","getElementById"],"mappings":"opEAEA,IA6EeA,EAAA,CACXC,SA9EaC,IAAOC,IAAVC,KA+EVC,KAnESH,IAAOI,EAAVC,KAoENC,OA9DWN,IAAOI,EAAVG,KA+DRC,QAxDYR,IAAOC,IAAVQ,KAyDTC,SA5CaV,IAAOW,OAAVC,KA6CVC,KA7BSb,IAAOc,EAAVC,8NCtDV,IASeC,EATFhB,IAAOiB,KAAVC,IAMQ,SAAAC,GAAK,OAAIA,EAAMC,WCyClBC,EA3CD,WAAM,IAAAC,EAEUC,mBAAS,IAFnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAETK,EAFSH,EAAA,GAEFI,EAFEJ,EAAA,GAAAK,EAGYN,mBAAS,IAHrBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGTE,EAHSD,EAAA,GAGDE,EAHCF,EAAA,GAAAG,EAIgBV,mBAAS,IAJzBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAITb,EAJSc,EAAA,GAICC,EAJDD,EAAA,GAMhBE,oBAAU,WACNC,KACD,IAEH,IAAMA,EAAsB,WACxB,IAAMC,EAAKC,KAAKC,MAAMD,KAAKE,SAAWC,EAAOC,QACvCC,EAAML,KAAKC,MAAMD,KAAKE,SAAWI,EAAUF,QACjDf,EAASc,EAAOJ,GAAIX,OACpBK,EAAUU,EAAOJ,GAAIP,QACrBI,EAAYU,EAAUD,KAG1B,OACIE,EAAAhC,EAAAiC,cAACC,EAAD,CAAM5B,SAAUA,GACZ0B,EAAAhC,EAAAiC,cAACjD,EAASC,SAAV,CAAmBuC,GAAG,aAClBQ,EAAAhC,EAAAiC,cAACjD,EAASK,KAAV,CAAemC,GAAG,QACbX,GAELmB,EAAAhC,EAAAiC,cAACjD,EAASQ,OAAV,CAAiBgC,GAAG,UAApB,KACOP,GAEPe,EAAAhC,EAAAiC,cAACjD,EAASU,QAAV,KACIsC,EAAAhC,EAAAiC,cAACjD,EAASY,SAAV,CAAmB4B,GAAG,YAAYW,QAAS,kBAAMZ,MAAjD,aAGAS,EAAAhC,EAAAiC,cAACjD,EAASe,KAAV,CAAeqC,KAAI,yCAAAC,OAA2CxB,EAAMyB,QAAQ,IAAK,MAC7Ed,GAAG,cACHe,OAAO,SACPC,IAAI,uBAHR,mBC5BLC,EANH,kBACRT,EAAAhC,EAAAiC,cAAAD,EAAAhC,EAAA0C,SAAA,KACIV,EAAAhC,EAAAiC,cAACU,EAAD,QCARC,IAASC,OAAOb,EAAAhC,EAAAiC,cAACa,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.887be4be.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst QuoteBox = styled.div`\n    min-width: 30vw;\n    /* min-height: 40vh; */\n    max-width: 50vw;\n    background: white;\n    border-radius: 1em;\n    box-shadow: 7px 10px 21px -3px rgba(0,0,0,0.75),\n                -7px -10px 21px -3px rgba(0,0,0,0.75);\n    padding: 2em;\n    text-align: center;\n`;\n\nconst Text = styled.p`\n    max-width: 100%;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 2em;\n`;\n\nconst Author = styled.p`\n    max-width: 90%;\n    font-size: 1.2em;\n    font-weight: bold;\n    text-align: right;\n`;\n\nconst FlexBox = styled.div`\n    margin: 2em 0 0 0;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n\n    @media (max-width: 900px) {\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n    }\n`;\n\nconst NewQuote = styled.button`\n    width: 45%;\n    font-size: 1.3em;\n    border: none;\n    background: rgb(110, 15, 145);\n    color: white;\n    padding: 10px;\n    border-radius: 0.2em;\n    box-shadow: 3px 3px 5px 1px rgba(0,0,0,0.75);\n    cursor: pointer;\n\n    :hover {\n        box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.75);\n    }\n`;\n\nconst Link = styled.a`\n    width: 45%;\n    display: block;\n    font-size: 1.3em;\n    font-weight: bold;\n    border: none;\n    border-radius: 0.2em;\n    padding: 5px;\n    background: rgb(61, 190, 255);\n    color: black;\n    text-decoration: none;\n    box-shadow: 3px 3px 5px 1px rgba(0,0,0,0.75);\n    transition: all .2s ease;\n\n    :active {\n        color: white;\n    }\n\n    :hover {\n        box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.75);\n    }\n`;\n\nexport default {\n    QuoteBox,\n    Text,\n    Author,\n    FlexBox,\n    NewQuote,\n    Link\n}","import styled from 'styled-components'\n\nconst Main = styled.main`\n    min-width: 100vw;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.gradient};\n`;\n\nexport default Main","import React, {useState, useEffect} from 'react'\nimport quotes from '../quotes.json'\nimport gradients from '../gradients.json'\nimport QuoteBox from '../styles/QuoteBox'\nimport Main from '../styles/Main'\n\nconst Quote = () => {\n\n    const [quote, setQuote] = useState('')\n    const [author, setAuthor] = useState('')\n    const [gradient, setGradient] = useState('')\n\n    useEffect(() => {\n        generateRandomQuote()\n    }, [])\n\n    const generateRandomQuote = () => {\n        const id = Math.floor(Math.random() * quotes.length)\n        const gid = Math.floor(Math.random() * gradients.length)\n        setQuote(quotes[id].quote)\n        setAuthor(quotes[id].author)\n        setGradient(gradients[gid])\n    }\n\n    return (\n        <Main gradient={gradient}>\n            <QuoteBox.QuoteBox id='quote-box'>\n                <QuoteBox.Text id='text'>\n                    {quote}\n                </QuoteBox.Text>\n                <QuoteBox.Author id='author'>\n                    - {author}\n                </QuoteBox.Author>\n                <QuoteBox.FlexBox>\n                    <QuoteBox.NewQuote id='new-quote' onClick={() => generateRandomQuote()}>\n                        New Quote\n                    </QuoteBox.NewQuote>\n                    <QuoteBox.Link href={`https://twitter.com/intent/tweet?text=${quote.replace(';', ',')}`}\n                        id='tweet-quote'\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                            Tweet Quote\n                    </QuoteBox.Link>\n                </QuoteBox.FlexBox>\n            </QuoteBox.QuoteBox>\n        </Main>\n    )\n}\n\nexport default Quote","import React from 'react'\nimport Quote from './components/Quote'\n\nconst App = () => (\n    <>\n        <Quote />\n    </>\n)\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}